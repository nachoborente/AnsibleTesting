---
- hosts: appserver
  serial: 1
  pre_tasks:
  - name: Removing server from LB
    include_tasks: manageLb.yml
    vars:
      action: "remove"
      pool: "{{ hostvars[item].pool }}"
      partition: "{{ hostvars[item].partition }}"
      port: "{{ publicHttpsPort }}"
      provider:
        server: "{{ hostvars[item].ansible_host }}"
        user: "{{ hostvars[item].user }}"
        password: "{{ hostvars[item].password }}"
        validate_certs: no
        server_port: "{{ hostvars[item].port }}"
    loop: "{{ groups.lb }}"
    when: hasBalancer | bool
  tasks:
  - block:  
    - name: Preparando subida  {{ appName }}
      file:
        state: directory
        path: "{{ item }}"
      loop:
        - "{{ lookup('env','WORKSPACE') }}/source-code"
    - debug:
        msg: "{{ lookup('env','WORKSPACE') }}/artifacts/{{ artifact }}"
    - command: "tar xzvf {{ lookup('env','WORKSPACE') }}/artifacts/{{ artifact }} -C {{ lookup('env','WORKSPACE') }}/source-code"
    run_once: yes
    delegate_to: localhost
  - include_role:
        name: front_apachehttp
    vars:
      source: "{{ lookup('env','WORKSPACE') }}/artifacts/{{ artifact }}"
      destination: "{{ remote_dir }}" 
      archive: true
      exclude:
        - index.html
        - entrypoints.json
        - "*.map"
  #    - include_vars:
  #          file: keystore/vaultpre
  post_tasks:
  - name: Adding server from LB
    include_tasks: manageLb.yml
    vars:
      action: "enter"
      pool: "{{ hostvars[item].pool }}"
      partition: "{{ hostvars[item].partition }}"
      port: "{{ publicHttpsPort }}"
      provider:
        server: "{{ hostvars[item].ansible_host }}"
        user: "{{ hostvars[item].user }}"
        password: "{{ hostvars[item].password }}"
        validate_certs: no
        server_port: "{{ hostvars[item].port }}"
    loop: "{{ groups.lb }}"
    when: hasBalancer | bool
  - name: "Checking private endpoint"
    uri:
      url: "https://{{ ip_vhost }}:{{ publicHttpsPort }}"
      return_content: yes
      validate_certs: no
      status_code: 200, 401, 403
    retries: 10 
    delay: 6
    register: result_private
    until: result_private is not failed
    run_once: True
  - name: Checking urls
    uri:
      url: "https://{{ publicEndpoint }}:{{ publicHttpsPort }}"
      return_content: yes
      status_code: 200, 401, 403
      validate_certs: no
      use_proxy: no
    retries: 10 
    delay: 10
    register: result_public
    until: result_public is not failed
    delegate_to: localhost
    run_once: True